{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","navbarProps","_useState","useState","_useState2","_slicedToArray","switchStatus","setSwitchStatus","React","createElement","className","style","setTheme","brand","Link","to","about","type","id","onChange","sendDataToParent","htmlFor","TextForm","textformProps","text","setText","words","wordcount","characters","length","setThemeBody","setThemeTextarea","value","event","target","role","aria-label","setUpperButtonTheme","onClick","newText","toUpperCase","toLowerCase","setLowerButtonTheme","replace","repeat","navigator","clipboard","writeText","textAlign","About","aboutProps","class","setCardTheme","src","alt","setCardInfoTheme","href","App","generalTheme","navbarTheme","textareaTheme","bodyTheme","cardTheme","cardInfoTheme","upperButtonsTheme","lowerButtonsTheme","themeValue","setThemeValue","PropTypes","string","isRequired","object","func","backgroundColor","color","height","width","themeValueFromChildren","console","log","Fragment","HashRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.139e89c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(navbarProps) {\r\n  const [switchStatus, setSwitchStatus] = useState(true);\r\n\r\n  function handleSwitchToggle() {\r\n    if (switchStatus === false) {\r\n      setSwitchStatus(true);\r\n      navbarProps.sendDataToParent(switchStatus);\r\n    } else if (switchStatus === true) {\r\n      setSwitchStatus(false);\r\n      navbarProps.sendDataToParent(switchStatus);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar p-1\" style={navbarProps.setTheme}>\r\n      <div className=\"container-fluid\">\r\n        <span\r\n          className=\"navbar-brand fw-semibold fs-2\"\r\n          style={navbarProps.setTheme}\r\n        >\r\n          {navbarProps.brand}\r\n        </span>\r\n        <form className=\"me-auto fw-semibold\">\r\n          <Link className=\"navbar-brand\" to=\"/\" style={navbarProps.setTheme}>\r\n            Home\r\n          </Link>\r\n          <Link\r\n            className=\"navbar-brand\"\r\n            to=\"/about\"\r\n            style={navbarProps.setTheme}\r\n          >\r\n            {navbarProps.about}\r\n          </Link>\r\n        </form>\r\n        <div className=\"form-check form-switch form-check-reverse\">\r\n          <input\r\n            className=\"form-check-input my-2\"\r\n            type=\"checkbox\"\r\n            id=\"flexSwitchCheckReverse\"\r\n            onChange={handleSwitchToggle}\r\n          />\r\n          <label\r\n            className=\"form-check-label fw-semibold fs-5\"\r\n            htmlFor=\"flexSwitchCheckReverse\"\r\n          >\r\n            Toggle Theme\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport wordcount from \"wordcount\";\r\n\r\nexport default function TextForm(textformProps) {\r\n  const [text, setText] = useState(\"Hello, I'm a text.\");\r\n\r\n  let words = wordcount(text);\r\n  let characters = text.length;\r\n\r\n  function onChangeHandle(event) {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  function onUpperClickHandle() {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n\r\n  function onlowerClickHandle() {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n\r\n  function onClearClickHandle() {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  }\r\n\r\n  function onRepeatClickHandle() {\r\n    let newText = text.repeat(2);\r\n    setText(newText);\r\n  }\r\n\r\n  function onRemoveExtraSpacesClickHandle() {\r\n    let newText = text;\r\n    newText = newText.replace(/\\s+/g, \" \");\r\n    setText(newText);\r\n  }\r\n\r\n  function onCopyClickHandle() {\r\n    let newText = text;\r\n    navigator.clipboard.writeText(newText);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-4\" style={textformProps.setThemeBody}>\r\n      <h1 className=\"my-3\">Enter text here to analyze</h1>\r\n\r\n      <div className=\"form-floating\">\r\n        <textarea\r\n          className=\"form-control fs-4\"\r\n          id=\"floatingTextarea2\"\r\n          style={textformProps.setThemeTextarea}\r\n          value={text}\r\n          onChange={onChangeHandle}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container btn-group-vertical my-4\"\r\n        role=\"group\"\r\n        aria-label=\"Vertical button group\"\r\n      >\r\n        <div\r\n          className=\"btn-group\"\r\n          role=\"group\"\r\n          aria-label=\"Basic outlined example\"\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary p-3 fw-semibold fs-5 text-start\"\r\n            style={textformProps.setUpperButtonTheme}\r\n            onClick={onUpperClickHandle}\r\n          >\r\n            Convert to UPPERCASE\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary p-3 fw-semibold fs-5 text-center\"\r\n            style={textformProps.setUpperButtonTheme}\r\n            onClick={onlowerClickHandle}\r\n          >\r\n            Convert to lowercase\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary p-3 fw-semibold fs-5 text-end\"\r\n            style={textformProps.setUpperButtonTheme}\r\n            onClick={onClearClickHandle}\r\n          >\r\n            Clear Text\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n          className=\"btn-group\"\r\n          role=\"group\"\r\n          aria-label=\"Basic outlined example\"\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success p-3 fw-semibold fs-5 text-start\"\r\n            style={textformProps.setLowerButtonTheme}\r\n            onClick={onRemoveExtraSpacesClickHandle}\r\n          >\r\n            Remove Extra Spaces\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success p-3 fw-semibold fs-5 text-center\"\r\n            style={textformProps.setLowerButtonTheme}\r\n            onClick={onRepeatClickHandle}\r\n          >\r\n            Repeat Text\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success p-3 fw-semibold fs-5 text-end\"\r\n            style={textformProps.setLowerButtonTheme}\r\n            onClick={onCopyClickHandle}\r\n          >\r\n            Copy Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <hr className=\"my-1 border-3\" />\r\n      <div className=\"container\">\r\n        <h2>Text Summary</h2>\r\n        <pre className=\"fs-5\">\r\n          Words: {words} | Characters: {characters}\r\n          <br />\r\n          Minutes to read: {0.008 * words}\r\n        </pre>\r\n        <h2>Preview</h2>\r\n        <p className=\"fs-4\" style={{ textAlign: \"justify\" }}>\r\n          {text.length > 0 ? text : \"Enter something in the textbox above.\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(aboutProps) {\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <h1 className=\"fw-semibold text-center\">About Me</h1>\r\n      <div class=\"card container p-2\" style={aboutProps.setCardTheme}>\r\n        <img\r\n          src=\"https://avatars.githubusercontent.com/u/74498800\"\r\n          class=\"card-img-top\"\r\n          alt=\"Github Avatar\"\r\n        />\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Dev - Mayank Pal</h5>\r\n          <p class=\"card-text fw-light\">He/Him</p>\r\n        </div>\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item\" style={aboutProps.setCardInfoTheme}>\r\n            Some of my public projects are on my{\" \"}\r\n            <a\r\n              className=\"link-warning link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover\"\r\n              href=\"https://github.com/MayankP2100\"\r\n            >\r\n              github\r\n            </a>\r\n            {\".\"}\r\n          </li>\r\n          <li class=\"list-group-item\" style={aboutProps.setCardInfoTheme}>\r\n            How to reach me: <br /> Discord: may.balls | Instagram:{\" \"}\r\n            <a\r\n              className=\"link-warning link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover\"\r\n              href=\"https://www.instagram.com/mayank._.2100/\"\r\n            >\r\n              mayank._.2100\r\n            </a>\r\n          </li>\r\n          <br />\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport PropTypes from \"prop-types\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport { Route, Routes, HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  const [themeValue, setThemeValue] = useState(false);\n\n  let generalTheme;\n  let navbarTheme;\n  let textareaTheme;\n  let bodyTheme;\n  let cardTheme;\n  let cardInfoTheme;\n  let upperButtonsTheme;\n  let lowerButtonsTheme;\n\n  let generalDarkTheme = {\n    backgroundColor: \"#3e3e42\",\n    color: \"#fff\",\n  };\n\n  let generalLightTheme = {\n    backgroundColor: \"#B8CFFB\",\n    color: \"#000000\",\n  };\n\n  let navbarDarkTheme = {\n    backgroundColor: \"#333333\",\n    color: \"#fff\",\n  };\n\n  let navbarLightTheme = {\n    backgroundColor: \"#8AB0F9\",\n    color: \"#000000\",\n  };\n\n  let textareaDarkTheme = {\n    height: \"200px\",\n    backgroundColor: \"#555555\",\n    color: \"#D3D3D3\",\n  };\n\n  let textareaLightTheme = {\n    height: \"200px\",\n    backgroundColor: \"#E9FBFA\",\n    color: \"#000000\",\n  };\n\n  let bodyLightTheme = {\n    backgroundColor: \"#B8CFFB\",\n    color: \"#000000\",\n    height: \"100vh\",\n    width: \"100vw\",\n  };\n\n  let bodyDarkTheme = {\n    backgroundColor: \"#3e3e42\",\n    color: \"#fff\",\n    height: \"100vh\",\n    width: \"100vw\",\n  };\n\n  let upperButtonsLightTheme = {\n    backgroundColor: \"blue\",\n    color: \"white\",\n  };\n\n  let upperButtonsDarkTheme = {\n    backgroundColor: \"red\",\n    color: \"white\",\n  };\n\n  let lowerButtonsLightTheme = {\n    backgroundColor: \"green\",\n    color: \"white\",\n  };\n\n  let lowerButtonsDarkTheme = {\n    backgroundColor: \"yellow\",\n    color: \"black\",\n  };\n\n  let cardLightTheme = {\n    backgroundColor: \"#ecf4fe\",\n    color: \"#000000\",\n    width: \"fit-content\",\n  };\n\n  let cardDarkTheme = {\n    backgroundColor: \"#636262\",\n    color: \"#fff\",\n    width: \"fit-content\",\n  };\n\n  let cardInfoLightTheme = {\n    backgroundColor: \"#ecf4fe\",\n    color: \"#000000\",\n    width: \"fit-content\",\n  };\n\n  let cardInfoDarkTheme = {\n    backgroundColor: \"#636262\",\n    color: \"#fff\",\n    width: \"fit-content\",\n  };\n\n  function getThemeValue(themeValueFromChildren) {\n    setThemeValue(themeValueFromChildren);\n    console.log(themeValue);\n  }\n\n  let navbarProps = {\n    brand: PropTypes.string.isRequired,\n    about: PropTypes.string.isRequired,\n    setTheme: PropTypes.object.isRequired,\n    sendDataToParent: PropTypes.func.isRequired,\n  };\n\n  let textformProps = {\n    setThemeBody: PropTypes.object.isRequired,\n    setThemeTextarea: PropTypes.object.isRequired,\n    setUpperButtonTheme: PropTypes.object.isRequired,\n    setLowerButtonTheme: PropTypes.object.isRequired,\n  };\n\n  let aboutProps = {\n    setCardTheme: PropTypes.object.isRequired,\n    setCardInfoTheme: PropTypes.object.isRequired,\n  };\n\n  if (themeValue === true) {\n    generalTheme = generalDarkTheme;\n    navbarTheme = navbarDarkTheme;\n    textareaTheme = textareaDarkTheme;\n    bodyTheme = bodyDarkTheme;\n    upperButtonsTheme = upperButtonsDarkTheme;\n    lowerButtonsTheme = lowerButtonsDarkTheme;\n    cardTheme = cardDarkTheme;\n    cardInfoTheme = cardInfoDarkTheme;\n  } else if (themeValue === false) {\n    generalTheme = generalLightTheme;\n    navbarTheme = navbarLightTheme;\n    textareaTheme = textareaLightTheme;\n    bodyTheme = bodyLightTheme;\n    upperButtonsTheme = upperButtonsLightTheme;\n    lowerButtonsTheme = lowerButtonsLightTheme;\n    cardTheme = cardLightTheme;\n    cardInfoTheme = cardInfoLightTheme;\n  }\n\n  navbarProps.setTheme = navbarTheme;\n  navbarProps.sendDataToParent = getThemeValue;\n  navbarProps.brand = \"TextUtils2\";\n  navbarProps.about = \"About\";\n\n  textformProps.setThemeBody = generalTheme;\n  textformProps.setThemeTextarea = textareaTheme;\n  textformProps.setUpperButtonTheme = upperButtonsTheme;\n  textformProps.setLowerButtonTheme = lowerButtonsTheme;\n\n  aboutProps.setCardTheme = cardTheme;\n  aboutProps.setCardInfoTheme = cardInfoTheme;\n\n  return (\n    <>\n      <HashRouter>\n        <div style={bodyTheme}>\n          <Navbar {...navbarProps} />\n          <Routes>\n            <Route path=\"/\" element={<TextForm {...textformProps} />} />\n            <Route path=\"/about\" element={<About {...aboutProps} />} />\n          </Routes>\n        </div>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}